apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-acl-operator.fullname" . }}-controller-manager
  namespace: {{ include "k8s-acl-operator.namespace" . }}
  labels:
    control-plane: controller-manager
    {{- include "k8s-acl-operator.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "k8s-acl-operator.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- include "k8s-acl-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-acl-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - command:
        - /manager
        args:
        {{- if .Values.operator.leaderElection }}
        - --leader-elect
        {{- end }}
        - --health-probe-bind-address=:{{ .Values.healthProbe.port }}
        {{- if .Values.metrics.secure }}
        - --metrics-bind-address=127.0.0.1:{{ .Values.metrics.port }}
        {{- else }}
        - --metrics-bind-address=:{{ .Values.metrics.port }}
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: manager
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthProbe.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthProbe.port }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.rbacProxy.enabled }}
      - name: kube-rbac-proxy
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.rbacProxy.image.repository }}:{{ .Values.rbacProxy.image.tag }}"
        args:
        - "--secure-listen-address=0.0.0.0:{{ .Values.service.port }}"
        - "--upstream=http://127.0.0.1:{{ .Values.metrics.port }}/"
        - "--logtostderr=true"
        - "--v=0"
        ports:
        - containerPort: {{ .Values.service.port }}
          protocol: TCP
          name: https
        resources:
          {{- toYaml .Values.rbacProxy.resources | nindent 10 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
